#!/usr/bin/env perl
#
# xkcdget - not running bloat browsers suggests that alternative means
# of viewing webcomics be made
#
#   xkcdget
#   xkcdget 123

use 5.16.0;
use File::HomeDir ();
use File::Slurper qw(write_binary write_text);
use File::Spec::Functions qw(catfile);
use File::stat qw(stat);
use Getopt::Long qw(GetOptions);
use HTTP::Tiny    ();
use JSON::MaybeXS ();
use List::UtilsBy qw( max_by );
use URI ();

my $img_dir = catfile( File::HomeDir->my_home, 'share/xkcd' );

my $img_viewer = 'feh';

GetOptions( 'timeout=i' => \my $Flag_Timeout ) or exit 64;

# patience, who has time for that?
$Flag_Timeout //= 7;

my $comic_num      = shift;
my $show_comic_num = 0;
if ( !defined $comic_num ) {
    $show_comic_num = 1;
    $comic_num      = 0;
} elsif ( $comic_num =~ m{^https?://xkcd\.com/([0-9]+)$} ) {
    # extract number from URL so can remap from ow(1)
    $comic_num = $1;
} else {
    die "comic number must be a number (or omit)\n" if !is_comicnum($comic_num);
}

chdir $img_dir or die "could not chdir to $img_dir: $!\n";

my $extension  = 'png';
my $comic_file = join '.', $comic_num, $extension;

if ( !-e $comic_file ) {
    my $agent = HTTP::Tiny->new( timeout => $Flag_Timeout, max_size => 1234577 );
    my $url =
      'https://xkcd.com/' . ( $comic_num > 0 ? "$comic_num/" : '' ) . 'info.0.json';

    my $resp = $agent->get($url);
    if ( $resp->{success} ) {
        # KLUGE on the perhaps rash assumption that XKCD uses UTF-8
        my $json = JSON::MaybeXS->new( utf8 => 1 );
        my $dat  = $json->decode( $resp->{content} );

        $comic_num = $dat->{num} // '';
        die "unexpected comic number '$comic_num' from XKCD\n"
          if !is_comicnum($comic_num);

        if ( !-e $comic_file ) {
            my $json_file = join '.', "info", $comic_num, "json";
            write_text( $json_file, $resp->{content} );

            my $img_url = URI->new( $dat->{img} );
            if ( $img_url->host !~ m/(?i)xkcd\.com$/ ) {
                die "unexpected image host '" . $dat->{img} . "' from XKCD\n";
            }

            my $path = $img_url->path;
            if ( $path =~ m/\.([a-z]{1,4})$/ ) {
                $extension = $1;
            }
            $comic_file = join '.', $comic_num, $extension;

            my $img = $agent->get( $dat->{img} );
            write_binary( $comic_file, $img->{content} );
            warn $comic_num, "\n" if $show_comic_num;
        }
    } else {
        # not on the Internet or network connectivity failed; try to
        # show the latest from the cache
        opendir my $dh, '.' or die "could not opendir '.': $!\n";
        $comic_file =
          max_by { stat($_)->mtime } grep { m/^\d{1,5}\.[a-z]{1,4}/ } readdir $dh;

        if ( !defined $comic_file ) {
            die "could not connect to xkcd: $resp->{status} $resp->{reason}\n";
        } else {
            warn "notice: could not connect to xkcd: $resp->{status} $resp->{reason}\n";
            sleep 1;
        }
    }
}

exec $img_viewer, $comic_file;

sub is_comicnum { $_[0] =~ m/^[0-9]+$/ }
