#!/usr/local/bin/tclsh8.6
#
# share-file - copy the given file up to a webserver
#
# share-screen - make a screen capture into an optionally named file
# after an optional delay, copying the result up to a webserver
#
# share-window - as prior, but selecting some window
#
# requires packages:
#
#   doas pkg_add pngcrush imlib2 xdotool
#
# and assumes that a ~/.ssh/config entry exists for "gh" (go home) that
# has a specific hostname entry that gets filled into the URL presented:
#
#   Host ... gh ...
#     Hostname ...

package require Tcl 8.5

set progname [file tail $argv0]
set name [lindex $argv 0]

if {[string equal $progname share-file]} {
    # NOTE this may fail on single-byte filenames that have the 8th bit
    # set; [encoding convertto ascii $file] may let such pass but might
    # cause problems for files that are in some encoding that uses that
    # 8th bit (why the ascii convertto lets the 8th bit garbage through
    # is another question) but I haven't tested that case
    if {![file exists $name]} {
        puts stderr "no such file '$name'"
        exit 1
    }
} else {
    if {[string length $name] == 0} { set name [clock seconds] }
    if {![string equal [file extension $name] .png]} { append name .png }

    if {[llength $argv] > 1} { after [expr 1000 * [lindex $argv 1]] }

    cd ~/tmp

    set capture imlib2_grab
    if {[string equal $progname share-window]} {
        lappend capture -id [exec -ignorestderr xdotool selectwindow windowraise getwindowfocus]
    }
    exec -ignorestderr -- {*}$capture $name
    exec -ignorestderr -- pngcrush -q -ow $name 2> /dev/null
}

exec -ignorestderr -- scp -q $name gh:www-tmp/
# doing a remote chmod on a filename turns out to be tricky given shell
# quoting and non-ASCII character issues over SSH, so instead hand that
# off to a script (an inode change service could also detect the change
# and act on it)
exec -ignorestderr -- ssh gh ./www-fixperm

set name [file tail $name]

set fh [open ~/.ssh/config]
while {[gets $fh line] >= 0} {
    if {[regexp {^\s*Host\s.*[[:<:]]gh[[:>:]]} $line]} {
        while {[gets $fh line] >= 0} {
            # whoops, no Hostname entry found in the Host block
            if {[regexp {^\s*Host\s$} $line]} { exit 1 }

            if {[regexp {^\s*Hostname\s+(\S+)} $line -> host]} {
                puts "http://$host/tmp/$name"
                exit 0
            }
        }
    }
}

exit 1
